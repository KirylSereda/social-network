{"version":3,"sources":["Components/HOC/withAuthRedirect.jsx","Components/Profile/Myposts/Myposts.module.css","Components/Profile/Myposts/Post/Post.module.css","assets/images/circle.jpg","Components/Profile/Myposts/Post/Post.jsx","Components/Profile/Myposts/Myposts.jsx","Components/Profile/Myposts/MypostsContainer.jsx","Components/Profile/Profile.jsx","Components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForReDirect","state","isAuth","auth","withAuthRedirect","Component","connect","props","to","module","exports","Post","className","s","post","innerPost","innerPost__img","src","imgForPost","innerPost__content","writerPost","textPost","message","lineForPost","likesCount","maxLength10","maxLengthCreator","AddPostFormRedux","reduxForm","form","onSubmit","handleSubmit","style","textareaForNewPost","Field","component","Textarea","name","placeholder","validate","required","cn","bodyStyle","btn","postButton","Myposts","postsElements","posts","map","p","id","addPost","values","AddPost","newPostText","MypostsContainer","profilePage","dispatch","addPostActionCreator","Profile","ProfileInfo","isOwner","profile","status","updateStatus","savePhoto","saveProfile","ProfileContainer","userId","this","match","params","console","log","authorizedUserId","getUsersProfile","getStatus","refreshProfile","prevProps","React","compose","withRouter"],"mappings":"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","file":"static/js/3.168c3e0f.chunk.js","sourcesContent":["import { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nlet mapStateToPropsForReDirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n  });\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    const RedirectComponent = (props) => {\r\n        if (!props.isAuth) return <Redirect to={\"/login\"} />\r\n        return <Component {...props} />\r\n    } \r\n\r\n\r\n    let ConnectedAuthRedirectComponent=connect(mapStateToPropsForReDirect)(RedirectComponent);\r\n    return ConnectedAuthRedirectComponent;\r\n}\r\n\r\n\r\n  \r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addPost\":\"Myposts_addPost__39PRq\",\"postButton\":\"Myposts_postButton__2nA2Q\",\"textareaForNewPost\":\"Myposts_textareaForNewPost__3hoO2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__2S2lE\",\"innerPost\":\"Post_innerPost__1Fv5J\",\"innerPost__img\":\"Post_innerPost__img__3oZ0C\",\"writerPost\":\"Post_writerPost__2cqwp\",\"lineForPost\":\"Post_lineForPost__GvnlZ\"};","export default __webpack_public_path__ + \"static/media/circle.198b1ffc.jpg\";","import React from 'react';\r\nimport s from './Post.module.css';\r\nimport imgForPost from './../../../../assets/images/circle.jpg'\r\n\r\nconst Post = (props) => {\r\n  return (\r\n<div className={s.post}>\r\n   <div className={s.innerPost}>\r\n     <img className={s.innerPost__img} src={imgForPost} />\r\n     <div className={s.innerPost__content}>\r\n          <div className={s.writerPost}>Kiryll Serada</div>\r\n          <div className={s.textPost}>{props.message}</div>\r\n     </div>\r\n   </div>\r\n        <hr className={s.lineForPost} />\r\n   <div>\r\n        &#128155;{props.likesCount}\r\n   </div>\r\n</div>\r\n  )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\nimport style from './Myposts.module.css';\r\nimport Post from './Post/Post';\r\nimport bodyStyle from './../../../body.module.css'\r\nimport cn from \"classnames\";\r\n\r\nconst Myposts = (props) => {\r\n  let postsElements =\r\n    props.posts.map(p => <Post key={p.id} message={p.message} likesCount={p.likesCount} />);\r\n\r\n  let onAddPost = (values) => {\r\n    props.AddPost(values.newPostText);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className={style.addPost}>\r\n        <div>New Post</div>\r\n        <AddPostFormRedux onSubmit={onAddPost} />\r\n      </div>\r\n      <div className={style.posts}>\r\n        {postsElements}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nlet maxLength10 = maxLengthCreator(10);\r\n\r\nconst postForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit} >\r\n      <div className={style.textareaForNewPost}>\r\n        <Field component={Textarea} name={'newPostText'} placeholder={'enter your post'}\r\n          validate={[required, maxLength10]} />\r\n      </div>\r\n      <div>\r\n        <button className={cn( bodyStyle.btn, style.postButton) }>Add post</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\nconst AddPostFormRedux = reduxForm({ form: 'postAddMessageForm' })(postForm);\r\nexport default Myposts;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addPostActionCreator} from '../../Redux/profile-reducer';\r\nimport Myposts from './Myposts';\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n      AddPost: (newPostText) => {\r\n      dispatch(addPostActionCreator(newPostText));\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nconst MypostsContainer = connect(mapStateToProps, mapDispatchToProps)(Myposts);\r\n\r\nexport default MypostsContainer;","import React from 'react';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MypostsContainer from './Myposts/MypostsContainer';\r\n\r\n\r\nconst Profile = (props) => {\r\n  \r\n  return <div>\r\n    <ProfileInfo isOwner={props.isOwner}\r\n     profile={props.profile}\r\n      status={props.status} \r\n      updateStatus={props.updateStatus}\r\n      savePhoto={props.savePhoto} \r\n      saveProfile={props.saveProfile}/>\r\n    <MypostsContainer />\r\n  </div>\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Profile from './Profile.jsx';\r\nimport { getUsersProfile, getStatus, updateStatus, savePhoto, saveProfile } from '../Redux/profile-reducer.js';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withAuthRedirect } from '../HOC/withAuthRedirect.jsx';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n  refreshProfile() {\r\n    let userId = this.props.match.params.userId;\r\n console.log(userId);\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId;\r\n    }\r\n\r\n    this.props.getUsersProfile(userId);\r\n    this.props.getStatus(userId)\r\n  }\r\n  componentDidMount() {\r\n    this.refreshProfile()\r\n    \r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n      this.refreshProfile();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Profile {...this.props}\r\n        isOwner={!this.props.match.params.userId}\r\n        profile={this.props.profile}\r\n        status={this.props.status}\r\n        updateStatus={this.props.updateStatus}\r\n        savePhoto={this.props.savePhoto} />\r\n\r\n    )\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getUsersProfile, getStatus, updateStatus, savePhoto, saveProfile }),\r\n  withRouter,\r\n  withAuthRedirect\r\n)(ProfileContainer);\r\n\r\n"],"sourceRoot":""}