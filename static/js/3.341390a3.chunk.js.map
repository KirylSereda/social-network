{"version":3,"sources":["Components/HOC/withAuthRedirect.jsx","Components/Profile/ProfileInfo/ProfileInfo.module.css","Components/Profile/Myposts/Myposts.module.css","Components/Profile/Myposts/Post/Post.module.css","Components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","Components/Profile/ProfileInfo/profileDataForm.jsx","Components/Profile/ProfileInfo/ProfileInfo.jsx","assets/images/circle.jpg","Components/Profile/Myposts/Post/Post.jsx","Components/Profile/Myposts/Myposts.jsx","Components/Profile/Myposts/MypostsContainer.jsx","Components/Profile/Profile.jsx","Components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForReDirect","state","isAuth","auth","withAuthRedirect","Component","connect","props","to","module","exports","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","className","s","profile_status","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","ProfileDataFormReduxForm","reduxForm","form","handleSubmit","profile","error","onSubmit","editBtn","style","formSummaryError","createField","required","Input","type","Textarea","Object","keys","contacts","map","key","contact","ProfileData","goToEditMode","isOwner","OwnerPage","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","cn","bodyStyle","btn","onClick","Contact","ProfileInfo","savePhoto","saveProfile","userProffile","userPhoto","fullName","src","photos","large","dataProfile","initialValues","formData","then","addPhotoBtn","target","files","length","Post","post","innerPost","innerPost__img","imgForPost","innerPost__content","writerPost","textPost","message","lineForPost","likesCount","maxLength10","maxLengthCreator","AddPostFormRedux","textarea_for_new_post","Field","component","name","placeholder","validate","post_button","Myposts","postsElements","posts","p","id","add_post","values","AddPost","newPostText","MypostsContainer","profilePage","dispatch","addPostActionCreator","Profile","compose","authorizedUserId","userId","getUsersProfile","getStatus","withRouter","match","params"],"mappings":"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","file":"static/js/3.341390a3.chunk.js","sourcesContent":["import { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nlet mapStateToPropsForReDirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n  });\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    const RedirectComponent = (props) => {\r\n        if (!props.isAuth) return <Redirect to={\"/login\"} />\r\n        return <Component {...props} />\r\n    } \r\n\r\n\r\n    let ConnectedAuthRedirectComponent=connect(mapStateToPropsForReDirect)(RedirectComponent);\r\n    return ConnectedAuthRedirectComponent;\r\n}\r\n\r\n\r\n  \r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userProffile\":\"ProfileInfo_userProffile__1RMZa\",\"userPhoto\":\"ProfileInfo_userPhoto__WarPD\",\"addPhotoBtn\":\"ProfileInfo_addPhotoBtn__23t7n\",\"editBtn\":\"ProfileInfo_editBtn__1skYs\",\"fullName\":\"ProfileInfo_fullName__2zpnf\",\"dataProfile\":\"ProfileInfo_dataProfile__3MoJY\",\"profile_status\":\"ProfileInfo_profile_status__2Hokr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"add_post\":\"Myposts_add_post__30bB8\",\"post_button\":\"Myposts_post_button__3-jO1\",\"textarea_for_new_post\":\"Myposts_textarea_for_new_post__YAPzx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__2S2lE\",\"innerPost\":\"Post_innerPost__1Fv5J\",\"innerPost__img\":\"Post_innerPost__img__3oZ0C\",\"writerPost\":\"Post_writerPost__2cqwp\",\"lineForPost\":\"Post_lineForPost__GvnlZ\"};","import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    };\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div className={s.profile_status}>\r\n            {!editMode &&\r\n                <div>\r\n                     <span onDoubleClick={activateEditMode} >\r\n                        {props.status || 'No status'}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input autoFocus={true}\r\n                        onBlur={deactivateEditMode}\r\n                        onChange={onStatusChange}\r\n                        value={status}\r\n                    ></input>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport s from './ProfileInfo.module.css';\r\nimport { createField, Input, Textarea } from \"../../common/FormsControls/FormsControls\";\r\nimport { reduxForm } from \"redux-form\";\r\nimport style from \"../../common/FormsControls/FormsControls.module.css\"\r\nimport { required } from \"../../../utils/validators/validators\";\r\n\r\n  export const ProfileDataForm = ({ handleSubmit, profile, error }) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        <div><button className={s.editBtn}>save</button></div>\r\n        {error && <div className={style.formSummaryError}>\r\n            {error}\r\n        </div>\r\n        }\r\n        <div>\r\n            <b>Full name</b>: {createField(\"Full name\", \"fullName\", [required], Input)}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job</b>: {createField(\"\", \"lookingForAJob\", [], Input, { type: \"checkbox\" })}\r\n        </div>\r\n        <div>\r\n            <b>My professional skills</b>:\r\n            {createField(\"My professional skills\", \"lookingForAJobDescription\", [], Textarea)}\r\n        </div>\r\n        <div>\r\n            <b>About me</b>:\r\n            {createField(\"About me\", \"aboutMe\", [], Textarea)}\r\n        </div>\r\n        <div>\r\n            <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n                return <div key={key} className={s.contact}>\r\n                    <b>{key}: {createField(key, \"contacts.\" + key, [], Input)}</b>\r\n                </div>\r\n            })}\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({ form: 'edit-profile' })(ProfileDataForm)\r\n\r\nexport default ProfileDataFormReduxForm;","import React, { useState } from 'react';\r\nimport Preloader from '../../common/preloader/preloader.jsx';\r\nimport s from './ProfileInfo.module.css';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks.jsx';\r\nimport userPhoto from \"../../../assets/images/images.png\"\r\nimport ProfileDataFormReduxForm, { } from './profileDataForm.jsx';\r\nimport bodyStyle from '../../../body.module.css'\r\nimport cn from \"classnames\";\r\n\r\n\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus, isOwner, savePhoto, saveProfile }) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData).then(\r\n            () => {\r\n                setEditMode(false);\r\n            }\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.userProffile}>\r\n                <div className={s.userPhoto} >\r\n                    <div className={s.fullName}>\r\n                    {profile.fullName}\r\n                    </div>\r\n                    <img src={profile.photos.large || userPhoto} />\r\n                </div>\r\n                <div className={s.dataProfile}>\r\n                    <ProfileStatusWithHooks className status={status} updateStatus={updateStatus} />\r\n                    {editMode\r\n                        ? <ProfileDataFormReduxForm initialValues={profile} profile={profile} onSubmit={onSubmit} />\r\n                        : <ProfileData goToEditMode={() => { setEditMode(true) }} profile={profile} isOwner={isOwner} />}\r\n                    {isOwner &&\r\n                        <input className={s.addPhotoBtn} type={\"file\"} onChange={onMainPhotoSelected} />}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n export const ProfileData = ({ profile, goToEditMode, isOwner }) => {\r\n    return <div className={s.OwnerPage}>\r\n        <div></div>{isOwner}\r\n        <div>\r\n            <b>Looking for a job</b>:{profile.lookingForAJob ? \"Yes\" : \"No\"}\r\n        </div>\r\n        {profile.lookingForAJob &&\r\n            <div>\r\n                <b>My professional skills</b>:{profile.lookingForAJobDescription}\r\n            </div>\r\n        }\r\n        <div>\r\n            <b>About Me</b>:{profile.aboutMe}\r\n        </div>\r\n        <div>\r\n            <b>Contacts</b>:{Object.keys(profile.contacts).map(key => {\r\n                if (key === 'mainLink' || key === 'youtube' || key === 'twitter'\r\n                    || key === 'website' || key === 'facebook') {\r\n                    return;\r\n                }\r\n                return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]} />\r\n            })}\r\n            \r\n        </div>\r\n        <div>  <button className={cn( [bodyStyle.btn], s.editBtn) } onClick={goToEditMode}>Edit</button></div>\r\n    </div>\r\n}\r\n\r\nexport const Contact = ({ contactTitle, contactValue }) => {\r\n\r\n    return <div className={s.contact}>\r\n        <b>{contactTitle}</b>:{contactValue}\r\n    </div>\r\n\r\n}\r\nexport default ProfileInfo;","export default __webpack_public_path__ + \"static/media/circle.198b1ffc.jpg\";","import React from 'react';\r\nimport s from './Post.module.css';\r\nimport imgForPost from './../../../../assets/images/circle.jpg'\r\n\r\nconst Post = (props) => {\r\n  return (\r\n<div className={s.post}>\r\n   <div className={s.innerPost}>\r\n        <img className={s.innerPost__img} src={imgForPost} />\r\n        <div className={s.innerPost__content}>\r\n               <div className={s.writerPost}>Kiryll Serada</div>\r\n               <div className={s.textPost}>{props.message}</div>\r\n        </div>\r\n   </div>\r\n        <hr className={s.lineForPost} />\r\n   <div>\r\n        &#128155;{props.likesCount}\r\n   </div>\r\n</div>\r\n  )\r\n};\r\n\r\nexport default Post;","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\nimport style from './Myposts.module.css';\r\nimport Post from './Post/Post';\r\nimport bodyStyle from './../../../body.module.css'\r\nimport cn from \"classnames\";\r\n\r\nlet maxLength10 = maxLengthCreator(10);\r\n\r\nconst Myposts = (props) => {\r\n\r\n  let postsElements =\r\n    props.posts.map(p => <Post key={p.id} message={p.message} likesCount={p.likesCount} />);\r\n\r\n  let onAddPost = (values) => {\r\n    props.AddPost(values.newPostText);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className={style.add_post}>\r\n        <div>New Post</div>\r\n        <AddPostFormRedux onSubmit={onAddPost} />\r\n      </div>\r\n      <div className={style.posts}>\r\n        {postsElements}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nconst postForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit} >\r\n      <div className={style.textarea_for_new_post}>\r\n        <Field component={Textarea} name={'newPostText'} placeholder={'enter your post'}\r\n          validate={[required, maxLength10]} />\r\n      </div>\r\n      <div>\r\n        <button className={cn( bodyStyle.btn, style.post_button) }>Add post</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst AddPostFormRedux = reduxForm({ form: 'postAddMessageForm' })(postForm);\r\n\r\nexport default Myposts;","import { connect } from 'react-redux';\r\nimport { addPostActionCreator} from '../../Redux/profile-reducer';\r\nimport Myposts from './Myposts';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n      AddPost: (newPostText) => {\r\n      dispatch(addPostActionCreator(newPostText));\r\n    }\r\n  }\r\n};\r\n\r\nconst MypostsContainer = connect(mapStateToProps, mapDispatchToProps)(Myposts);\r\n\r\nexport default MypostsContainer;","import React from 'react';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MypostsContainer from './Myposts/MypostsContainer';\r\n\r\n\r\nconst Profile = (props) => {\r\n  \r\n  return <div>\r\n    <ProfileInfo isOwner={props.isOwner}\r\n     profile={props.profile}\r\n      status={props.status} \r\n      updateStatus={props.updateStatus}\r\n      savePhoto={props.savePhoto} \r\n      saveProfile={props.saveProfile}/>\r\n    <MypostsContainer />\r\n  </div>\r\n}\r\n\r\nexport default Profile;","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Profile from './Profile.jsx';\r\nimport { getUsersProfile, getStatus, updateStatus, savePhoto, saveProfile } from '../Redux/profile-reducer.js';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withAuthRedirect } from '../HOC/withAuthRedirect.jsx';\r\nimport { compose } from 'redux';\r\n\r\nconst ProfileContainer=(props)=> {\r\n\r\n  useEffect(() => {\r\n    let userId = props.match.params.userId;\r\n    if (!userId) {\r\n        userId = props.authorizedUserId;\r\n    };\r\n    props.getUsersProfile(userId);\r\n    props.getStatus(userId);\r\n}, [props.match.params.userId]);\r\n\r\n      return (\r\n      <Profile {...props}\r\n        isOwner={!props.match.params.userId}\r\n        profile={props.profile}\r\n        status={props.status}\r\n        updateStatus={props.updateStatus}\r\n        savePhoto={props.savePhoto} />\r\n    )\r\n  };\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getUsersProfile, getStatus, updateStatus, savePhoto, saveProfile }),\r\n  withRouter,\r\n  withAuthRedirect\r\n)(ProfileContainer);\r\n\r\n"],"sourceRoot":""}